# 1) Дан список. Выведите те его элементы, которые встречаются в списке только один
# раз. Элементы нужно выводить в том порядке, в котором они встречаются в
# списке


# lst_1 = [1, 'rgg', 2, 'reggs', 89, 16, 1, 16, 'ehde5', 'reggs']
# lst_2 = []
# for i in lst_1:
#     if lst_1.count(i) < 2:
#         lst_2.append(i)
# print(lst_2)


# 2) Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу.
# Считается, что любые два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать.


# lst_1 = [1, 2, 89, 16, 1, 16, 115, 145, 115, 100]
# lst_2 = []
# st_1 = set(lst_2)
# for i in lst_1:
#     if lst_1.count(i) == 2:
#         lst_2.append(i)
#         st_1.add(i)
# print(lst_2)
# print(len(st_1))


# 3) Даны два кортежа:
# C_1 = (35, 78,21,37, 2,98, 6, 100, 231)
# C_2 = (45, 21,124,76,5,23,91,234)
# Необходимо определить:
# 1) Сумма элементов какого из кортежей больше и вывести соответствующее
# сообщение на экран (Сумма больше в кортеже - ..)
# 2) Вывести на экран порядковые номера минимальных и максимальных элементов
# этих кортежей


# C_1 = (35, 78, 21, 37, 2, 98, 6, 100, 231)
# C_2 = (45, 21, 124, 76, 5, 23, 91, 234)
# # lst_1 = list(C_1)
# # lst_2 = list(C_2)
# # print(sum(lst_1))
# # print(sum(lst_2))
# # if sum(lst_1) > sum(lst_2):
# #     print('Сумма больше в кортеже C_1', sum(lst_1))
# # else:
# #     print('Сумма больше в кортеже C_2', sum(lst_2))
# print('Максимальное значение кортежа С_1', max(C_1))
# print('Минимальное  значение кортежа С_1', min(C_1))
# print('Максимальное значение кортежа С_2', max(C_2))
# print('Минимальное  значение кортежа С_2', min(C_2))


# 6) Даны два списка чисел. Посчитайте, сколько чисел содержится одновременно как в
# первом списке, так и во втором.


# lst_1 = [1, 14, 26, 2, 8, 26, 35, 8, 100]
# lst_2 = [14, 26, 35, 100, 29, 115, 245]
# st_1 = set(lst_1)
# st_2 = set(lst_2)
# print(st_1 & st_2)
# print(len(st_1 & st_2))



# 7) Напишите программу, демонстрирующую работу try\except\finally


# try:
#     M = int(input('Первое число: '))
#     N = int(input('Второе число: '))
#     L = M/N
#     print('Результат деления чисел: ', L)
# except ZeroDivisionError:
#     print('Попробуй ещё...')
# except ValueError:
#     print('Введены не числовые значения')
# finally:
#     print('Good job')


# 4) Создайте словарь из строки ' An apple a day keeps the doctor away' следующим
# образом: в качестве ключей возьмите символы строки, а значениями пусть будут
# числа, соответствующие количеству вхождений данной буквы в строку.


#my_text = 'An apple a day keeps the doctor away'
#my_dict = {}
# print(my_text.split())
# my_dict = {i: my_text.count(i) for i in my_text}
# print(my_dict)
#for i in my_text:
    #my_dict[i] = my_text.count(i)
#print(my_dict)


# 5) Клиент приходит в кондитерскую. Он хочет приобрести один или несколько видов
# продукции, а также узнать её состав.
# Реализуйте кондитерскую.
# У вас есть словарь, где ключ – название продукции (торт, пирожное, маффин и
# т.д.). Значение – список, который содержит состав, цену (за 100гр) и кол-во (в
# граммах).
# Предложите выбор:
# 1. Если человек хочет посмотреть описание: название – описание
# 2. Если человек хочет посмотреть цену: название – цена.
# 3. Если человек хочет посмотреть количество: название – количество.
# 4. Всю информацию.
# 5. Приступить к покупке:
# С клавиатуры вводите название торта и его кол-во. n – выход из программы.
# Посчитать цену выбранных товаров и сколько товаров осталось в изначальном
# списке
# 6. До свидания


#my_dict = {'торт': [['мука', 'яйца', 'сахар', 'ванильный сахар', 'клубника', 'сливки', 'сахарная пудра', 'мята', 'ликер', 'питьевая вода'],
                    #7, 1000],
           #'пирожное': [['яйца', 'сыр Маскарпоне', 'сахар', 'печенье Савоярди', 'кофе эспрессо', 'какао-порошок', 'коньяк'],
                        #3.5, 850],
           #'маффин': [['мука', 'сахар', 'яйца', 'изюм', 'сливочное масло', 'сметана', 'грецкий орех', 'сода'],
                      #2, 1000],
           #'печенье': [['мука', 'сахар', 'яйца', 'сливочное масло', 'мускатный орех', 'корица', 'кофе', 'сода'],
                       #1, 500]}